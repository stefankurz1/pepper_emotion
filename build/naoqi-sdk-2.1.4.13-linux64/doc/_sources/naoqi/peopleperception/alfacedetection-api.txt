.. _alfacedetection-api:

ALFaceDetection API
===================

:ref:`naoqi-peopleperception` - :ref:`Overview <alfacedetection>` | API |
:ref:`Tutorial <alfacedetection-tuto>`

-----------------

Namespace : **AL**

.. code-block:: cpp

  #include <alproxies/alfacedetectionproxy.h>

Method list
-----------

.. cpp:class:: ALFaceDetectionProxy

* As any module, this module inherits methods from :ref:`almodule-api`.

* It also inherits methods from :ref:`alextractor-api` and :ref:`alvisionextractor-api`.

* It also has the following specific methods:

  * :cpp:func:`ALFaceDetectionProxy::clearDatabase`
  * :cpp:func:`ALFaceDetectionProxy::forgetPerson`
  * :cpp:func:`ALFaceDetectionProxy::getLearnedFacesList`
  * :cpp:func:`ALFaceDetectionProxy::getRecognitionConfidenceThreshold`
  * :cpp:func:`ALFaceDetectionProxy::importOldDatabase`
  * :cpp:func:`ALFaceDetectionProxy::isRecognitionEnabled`
  * :cpp:func:`ALFaceDetectionProxy::isTrackingEnabled`
  * :cpp:func:`ALFaceDetectionProxy::learnFace`
  * :cpp:func:`ALFaceDetectionProxy::reLearnFace`
  * :cpp:func:`ALFaceDetectionProxy::setRecognitionConfidenceThreshold`
  * :cpp:func:`ALFaceDetectionProxy::setRecognitionEnabled`
  * :cpp:func:`ALFaceDetectionProxy::setTrackingEnabled`
  * :cpp:func:`ALFaceDetectionProxy::enableRecognition` (deprecated)
  * :cpp:func:`ALFaceDetectionProxy::enableTracking` (deprecated)

Event list
----------

* :naoqi:event:`FaceDetected`


Methods
-------

.. cpp:function:: bool ALFaceDetectionProxy::clearDatabase()

  Removes all learned faces from the database.

  :return: true if the operation succeeded

.. cpp:function:: bool ALFaceDetectionProxy::forgetPerson(const std::string& name)

  Deletes from the database all learned faces corresponding to the specified person.

  :param name: The name of the person to forget

  :return: true if the operation succeeded

.. cpp:function:: AL::ALValue ALFaceDetectionProxy::getLearnedFacesList()

  Gets a list containing the name of each learned face. The size of this list is
  always equal to the number of faces in the data base.

  :return: List of names

.. cpp:function:: float ALFaceDetectionProxy::getRecognitionConfidenceThreshold()

  Returns the current threshold value used for face recognition.

  :return: Threshold value.

.. cpp:function:: bool ALFaceDetectionProxy::importOldDatabase(const std::string& policy)

  Conversion tool. Converts an old data base (NAOqi version < 1.22) to the new
  format. This needs to be run only once.

  If the module ALFaceDetection has already faces in its data base, you can still
  import an old data base. Its content will be merged and conflicting entries (i.e.
  faces with the same name) will be dealt with according to the specified policy.

  :param policy: Merge policy if an imported entry has the same name as an existing one.

   "overwrite" to replace the existing entry by the imported one,

   "merge" to merge data from both entries (if they don't relate to the same person, face recognition may fail),

   "keep" to keep the existing entry and ignore the imported one.

.. cpp:function:: bool ALFaceDetectionProxy::isRecognitionEnabled()

  Returns whether recognition is enabled. Recognition is enabled by default.

  :return: true/false

.. cpp:function:: bool ALFaceDetectionProxy::isTrackingEnabled()

  Returns whether tracking is enabled. Tracking is enabled by default.

  :return: true/false

.. cpp:function:: bool ALFaceDetectionProxy::learnFace(const std::string& name)

  Learns a new face and add it in the database under the specified name.

  :param name: The name of the person to learn

  :return: true if the operation succeeded

.. cpp:function:: bool ALFaceDetectionProxy::reLearnFace(const std::string& name)

  Uses, in a new learning process, the latest images where a face has been wrongly recognized.

  When a face is recognized, a series of few images before and after the recognition
  are kept in memory in a rolling buffer for 7 seconds. If this method is called, these
  images are going to feed the learning stage in order to associate the correct name
  to this face.

  :param name: The name of the person to learn

  :return: true if the operation succeeded

.. note::
   if two different persons are recognized in less than 7 seconds, only the first one
   can be relearned.

.. cpp:function:: void ALFaceDetectionProxy::setRecognitionConfidenceThreshold(float threshold)

  Sets a new threshold value for face recognition. This value must be between 0 and 1,
  with a default of 0.4. Refer to :ref:`threshold` for a more complete explanation.

  :param threshold: new threshold value.

.. cpp:function:: void ALFaceDetectionProxy::setRecognitionEnabled(const bool& enable)

  Enables/disables the face recognition process. The remaining face detection process will be faster if face recognition is disabled.
  Face recognition is enabled by default.

  :param enable: true/false

.. cpp:function:: void ALFaceDetectionProxy::setTrackingEnabled(const bool& enable)

  Enables/disables face tracking. Enabling tracking usually allows you to follow a face even if the corresponding person is not facing the camera anymore.
  However, it can lead to more false detections. When active, only one face at a time will be detected.

  :param enable: true/false

.. cpp:function:: void ALFaceDetectionProxy::enableRecognition(const bool& enable)

  .. deprecated:: 2.0 Use :cpp:func:`ALFaceDetectionProxy::setRecognitionEnabled` instead.

.. cpp:function:: void ALFaceDetectionProxy::enableTracking(const bool& enable)

  .. deprecated:: 2.0 Use :cpp:func:`ALFaceDetectionProxy::setTrackingEnabled` instead.

Events
------

.. naoqi:event:: FaceDetected(AL::ALValue value)

  Raised when one or several faces are currently being detected.

  :param value: Informations related to the detected faces. Please refer to :ref:`alfacedetection` for details.
